<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee; http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/classes/log4.properties</param-value>
    </context-param>
    <servlet>
    <servlet-name>HelloServlet</servlet-name>
    <servlet-class>com.day1.HelloServlet</servlet-class>
    </servlet>
    <servlet-mapping>
<servlet-name>HelloServlet</servlet-name>
    <url-pattern>/day1/hello.kh</url-pattern>
    </servlet-mapping>
     <servlet>
    <servlet-name>FrontController1</servlet-name>
    <servlet-class>com.pojo.step1.FrontMVC1</servlet-class>
    </servlet>
    <servlet-mapping>
<servlet-name>FrontController1</servlet-name>
<!-- *.st1하면 어떤 요청이름이 오든 확장자가 st1으로 끝나면 FrontMVC1서블릿이 인터셉트 함 
        web.xml을 수정하면 무조건 서버를 재가동해야 수정된 내용이 반영됨
-->
    <url-pattern>*.st1</url-pattern>
    </servlet-mapping>
    
      <servlet>
    <servlet-name>FrontController2</servlet-name>
    <servlet-class>com.pojo.step2.ActionServlet</servlet-class>
    </servlet>
    <servlet-mapping>
<servlet-name>FrontController2</servlet-name>
    <url-pattern>*.st2</url-pattern>
    </servlet-mapping>
      <servlet>
    <servlet-name>FrontController3</servlet-name>
    <servlet-class>com.pojo.step3.ActionSupport</servlet-class>
    </servlet>
    <servlet-mapping>
<servlet-name>FrontController3</servlet-name>
    <url-pattern>*.st3</url-pattern>
    </servlet-mapping>
    <servlet>
    <servlet-name>DeptManager</servlet-name>
    <servlet-class>com.day1.DeptManager</servlet-class>
    </servlet>
    <servlet-mapping>
<servlet-name>DeptManager</servlet-name>
    <url-pattern>/JEasyUI/dept/insertAction.do</url-pattern>
    </servlet-mapping>
    <servlet>
    <servlet-name>TestServlet</servlet-name>
    <servlet-class>com.mvc.controller.TestServlet</servlet-class>
    </servlet>
    <servlet-mapping>
<servlet-name>TestServlet</servlet-name>
    <url-pattern>/test/test.do</url-pattern>
    </servlet-mapping>
    <session-config>
  <session-timeout>10</session-timeout>
</session-config>

</web-app>
<!-- 
  context-param과 init-param 차이
  context-param은 서버가 기동될 때 한 번 읽으면 서버가 종료될 때까지 계속 기억함
  init-param은 서블릿이 요청될 때마다 새로 읽는다
  
  Deployeement Desciptor
  배치서술자
  spring maven -빌드 -> pom.xml파일 등록
  
  web.xml 문서를 수정하면 반드시 서버를 내렸다가 다시 가동할것 !주의!
  톰캣 서버를 기동하면 가장 먼저 읽는다
  이 문서를 읽으면 st1확장자에 대해 알고 있다.
  st1으로 들어오는 모든 요청은 FrontMVC1.java가 인터셉트 한다.
  이 요청은 브라우저의 주소창에 하게 되고
  이 요청의 URL을 읽어서 upmu배열에 담는다
  dept/getDeptList - select 처리 - 화면 유지 - forward 페이지 이동 - 조회결과는 request에 담음
  dept/deptInsert - insert 처리 - 유지 필요 없음 - res.sendRedirect(페이지이름) -> path담음
  dept/deptUpdate - update 처리 - 유지 필요 없음 - res.sendRedirec(페이지이름) -> path담음
  dpet/deptDelete - delete 처리 - 유지 필요 없음 - res.sendRedirec(페이지이름) -> path담음
  path 관리하는 클래스명은 ActionForward이다.
  이 클래스에는 전변이 두 개 있다.
  path - 페이지이름
  isRedirect - true : res.sendRedirect
               false : res.RequestDispatcher view = req.getRequestDispatcher()
                       view.forward(req,res)
 위 내용에 대한 설정은 어디서 ? -> frontMVC1의 doService에서 했음!
 
 -->